http = {
  port = 8050
  ssl = false
}

oasis = {

  adminApi = {
    baseUrl: "http://localhost:18050/api"

    eventSourceGet: "/admin/event-source"
    playerGet: "/players"

    # authentication details of admin api
    apiKey: "eventapi"
    secretKey: "eventapi"
  }

  dispatcher = {
    impl = "oasis:io.github.oasis.services.events.dispatcher.RabbitMQVerticle"
    configs = {
      host: "localhost"
      port: 5672
      automaticRecoveryEnabled: true
      connectionRetries: 5
      connectionRetryDelay: 2000,

      # Oasis related configurations

      # This exchange configuration is being used for routing events for games
      eventExchange = {
        name = "oasis.event.exchange"
        type = direct
        durable = true
        autoDelete = false
      }

      # This exchange configuration is being used when some messages needs
      # to be announced for all game event queues.
      broadcastExchange = {
        name = "oasis.event.bc.exchange"
        durable = true
        autoDelete = false
      }
    }
  }

  cache = {
    impl = "oasis:io.github.oasis.services.events.db.RedisVerticle"
    configs = {
      connectionString: "redis://localhost:6379"
      maxPoolSize: 4
      maxWaitingHandlers: 16
    }
  }
}