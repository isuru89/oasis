oasis:
  adminApi:
    baseUrl: "http://stats-api:8010/api"

    eventSourceGet: "/admin/event-sources/"
    playerGet: "/players/"
    teamGet: "/teams/"
    gameGet: "/games/"

    # authentication details of admin api
    apiKey: "feeder"
    secretKey: "feeder"

  delivery:
    # Specify the implementation class of FeedDeliverable
    impl: "io.github.oasis.services.feeds.impl.ConsoleFeedDeliverable"

    configs:
    # specific configurations for above mentioned implementation

  eventstream:
    impl: "io.github.oasis.ext.kafkastream.KafkaStreamFactory"
    configs:
      brokerUrls: "kafka:9092"

      feedStreamConsumer:
        groupId: feed-consumer-group

        # These props will directly feed to Kafka property configs
        # Check kafka consumer documentation for supported props.
        props:
        #"max.poll.records": 10,
        #"session.timeout.ms": 86400000

  cache:
    configs:

      # Maximum number of seconds to keep a record once written to cache.
      # Set zero (0) to keep the object indefinitely.
      # Default: 15 minutes
      expireAfter: 900

      # Maximum number of players to be kept in memory at a time.
      maxEntries:
        games: 10
        eventSources: 10
        teams: 100
        players: 250